@using Microsoft.EntityFrameworkCore;
@using StepChat.Contexts;
@using System.Security.Cryptography;
@using System.Text;

@model StepChat.Models.UsersModel
@inject MessengerDataDbContext _context

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/main_style.css">

    <script defer src="~/lib/crypto-js/crypto-js.min.js"></script>
    <script defer src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script defer src="~/lib/jquery/dist/jquery.min.js"></script>
    <script defer src="~/js/chat.js"></script>
    <script defer src="~/js/main_page_styles.js"></script>
    @*<script defer src="~/js/data_base.js"></script>*@

    <title>Step Chat</title>
</head>

@{
    int userId = this.Model.Id;
    List<List<ChatsModel>> chats = new();

    var chatsId = await _context!.ChatUsers
                    .Where(x => x.User1 == userId || x.User2 == userId)
                    .Select(e => e.ChatId)
                    .ToListAsync();

    @Html.HiddenFor(model => model.Id , new { Id = "userId" })
    ;

    foreach (var item in chatsId)
    {
        chats.Add(await _context.Chats.Where(x => x.ChatId == item).ToListAsync());
    }

}

@functions {
    string? GetEmail(int chatId, int userId)
    {
        var chat = _context!.ChatUsers.FirstOrDefault(x => x.User1 == userId && x.ChatId == chatId || x.User2 == userId && x.ChatId == chatId);

        //var chat = await _context.Chats.FirstOrDefaultAsync(x => x.ChatId == chatId);
        if (chat.User1 != userId)
        {
            var user = _context.Users.Find(chat.User1);
            return user.Email;
        }
        else
        {
            var user = _context.Users.Find(chat.User2);
            return user.Email;
        }
    }

    void SendFile()
    {
        //ViewData["newElement"] = ;
    }
}


<body>
    <div class="container">
        <div class="search-box" id="search-box">
            <div class="header">
                <div class="search-chat">
                    <input type="text" placeholder="Search">
                </div>
                <div class="new-chat" id="new-chat">
                    <button type="button" class="new-chat-btn" onclick="new_chat()">
                        <img src="/icons/messages.svg">
                    </button>
                </div>
            </div>
            <div id="chat-list" class="chat-list">
                @foreach (var item in chats)
                {
                    foreach (var item2 in item)
                    {
                        <div id="user-cl" class="block" data-email=@GetEmail(@item2.ChatId, @userId) data-chatId=@item2.ChatId>
                            <div class="image-box">
                                <div class="image-padding">
                                    @if (@item2.CreateChatUserId == @userId)
                                    {
                                        <img class="image" src="data:image;base64,@System.Convert.ToBase64String(_context.Images.FirstOrDefault(x => x.ImageId == item2.User2ImageId).Image)">
                                    }
                                    else
                                    {
                                        <img class="image" src="data:image;base64,@System.Convert.ToBase64String(_context.Images.FirstOrDefault(x => x.ImageId == item2.User1ImageId).Image)">
                                    }
                                </div>
                            </div>
                            <div id="user-cl" class="details">
                                <div class="head-list">
                                    <h4>
                                        @if (@item2.CreateChatUserId == @userId)
                                        {
                                            @item2.User2Name
                                        }
                                        else
                                        {
                                            @item2.User1Name
                                        }
                                    </h4>
                                    <p class="time">@item2.Time!.Value.ToString(@"hh\:mm")</p>
                                </div>
                                <div id="user-cl" class="message-container">
                                    <div class="message">
                                        <p id="message-preview"></p>
                                    </div>
                                    <div class="new-message_container">
                                        <div id="new_message" class="new-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="settings-admin">
                <div class="admin-logos">
                    <div class="admin-panel">
                        <button class="admin-panel-btn" onclick="admin_panel()">
                            <img src="/icons/tool.svg">
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div id="start-box" class="start-box">
            <div class="start-box-container">
                <img class="step-icon" src="~/icons/step_logo.svg" width="300" height="310">
                <br />
                <label style="text-align: center; color: #FFFFFF; font-size: 23px;">Step IT Local Chat</label>
                <br />
                <label style="color: #c1c1c1; font-size: 16px;">Chat with your teachers and friends everywhere</label>
            </div>
        </div>

        <div id="chat-box" class="chat-box">
            <div id="convo" class="convo">
                <div class="convo-head">
                    <div class="convo-user">
                        <div class="convo-image-box">
                            <div class="image-padding">
                                <img id="chat-image" class="image" src="~/images/blank-profile-picture.png">
                            </div>
                        </div>
                        <h4 id="chat-name"></h4>
                    </div>
                    <div class="convo-search-input" id="convo-search-input">
                        <input type="text" placeholder="Search">
                        <button type="button" class="search-close" onclick="search_close()">
                            <img src="~/icons/x.svg">
                        </button>
                    </div>
                    <div class="convo-search" id="convo-search">
                        <button class="search-btn" onclick="search_input()">
                            <img src="~/icons/search.svg">
                        </button>
                    </div>
                </div>
                <div class="convo-main">
                    <div id="messageList" class="chatting"></div>
                </div>
                <div class="convo-input">
                    <div class="paper-clip">
                        <label style="cursor: pointer;" for="file-input">
                            <img src="/icons/circle-plus.svg">
                        </label>
                        <input id="file-input" class="file-input" type="file" />
                    </div>
                    <div class="chat-input">
                        <input id="message" type="Text" placeholder="Type...">
                    </div>
                    <div class="smile">
                        <img src="/icons/mood-smile.svg">
                    </div>
                    <div id="sendBtn" class="send">
                        <img src="/icons/arrow-forward-up.svg">
                    </div>
                </div>
            </div>
        </div>

        <div class="new-chat-popup" id="new-chat-popup">
            <form class="new-chat-popup-container">
                <div class="search-new-chat">
                    <input type="text" placeholder="Search">
                </div>
                <div class="select-chat-user">
                    @foreach (var item in _context.Users.Where(x => x.Id != userId))
                    {
                        <div class="new-chat-user" data-email=@item.Email>
                            <div class="image-box">
                                <div class="image-padding">
                                    <img class="image" src="data:image;base64,@System.Convert.ToBase64String(_context.Images.FirstOrDefault(x => x.ImageId == item.ImageId).Image)">
                                </div>
                            </div>
                            <div class="user-info">
                                <h4>@item.FullName</h4>
                                <h5>@item.Email</h5>
                            </div>
                        </div>
                    }
                </div>
                <div class="new-chat-close-btn">
                    <button type="button" class="new-chat-close" onclick="new_chat_close()">
                        <img src="~/icons/x.svg">
                    </button>
                </div>
            </form>
        </div>

        <div class="new-chat-popup" id="new-chat-popup">
            <form class="new-chat-popup-container">
                <div class="search-new-chat">
                    <input type="text" placeholder="Search">
                </div>
                <div class="select-chat-user">
                    @foreach (var item in _context.Users)
                    {
                        <div class="new-chat-user" data-email=@item.Email @*onclick=@CreateNewChat()*@>
                            <div class="image-box">
                                <div class="image-padding">
                                    <img class="image" src="data:image;base64,@System.Convert.ToBase64String(_context.Images.FirstOrDefault(x => x.ImageId == item.ImageId).Image)">
                                </div>
                            </div>
                            <div class="user-info">
                                <div class="new-user-name-container">
                                    <h4>@item.FullName</h4>
                                </div>
                                <div class="new-user-email-container">
                                    <h5>@item.Email</h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="new-chat-close-btn">
                    <button type="button" class="new-chat-close" onclick="new_chat_close()">
                        <img src="/icons/x.svg">
                    </button>
                </div>
            </form>
        </div>
        @*
        <div class="new-chat-popup" id="new-chat-popup">
        <form class="new-chat-popup-container">
        <div class="search-new-chat">
        <input type="text" placeholder="Search">
        </div>
        <div class="select-chat-user">
        @foreach (var item in _context.Users)
        {
        <div class="new-chat-user" data-email=@item.Email>
        <div class="image-box">
        <div class="image-padding">
        <img class="image" src="data:image;base64,@System.Convert.ToBase64String(_context.Images.FirstOrDefault(x => x.ImageId == item.ImageId).Image)">
        </div>
        </div>
        <h4>@item.FullName</h4>
        </div>
        }
        </div>
        <div class="new-chat-close-btn">
        <button type="button" class="new-chat-close" onclick="new_chat_close()">
        <img src="/icons/x.svg">
        </button>
        </div>
        </form>
        </div>*@

        <div class="admin-popup" id="admin-popup">
            <form class="admin-container">
                <div class="group-buttons" id="group-buttons">
                    <button class="group-create-btn" type="button" onclick="group_create()">
                        <img src="/icons/users.svg">
                    </button>
                    <button class="user-add-btn" type="button" onclick="group_create()">
                        <img src="/icons/user-plus.svg">
                    </button>
                    <button class="user-delete-btn" type="button" onclick="group_create()">
                        <img src="/icons/user-minus.svg">
                    </button>
                </div>
                <div class="select-user" id="select-user">
                    <div class="select-group-user">
                        <div class="group-user">
                            <div class="image-box">
                                <div class="image-padding">
                                    <img class="image" src="/images/blank-profile-picture.png">
                                </div>
                            </div>
                            <h4>Орхан</h4>
                        </div>
                        <div class="select-user-cb">
                            <input type="checkbox">
                        </div>
                    </div>
                </div>
                <div class="group-create-submit" id="group-create-submit">
                    <button class="group-create-submit-btn" type="submit">
                        <p>Create Group</p>
                    </button>
                </div>
                <div class="admin-close-btn">
                    <button type="button" class="admin-close" onclick="admin_close()">
                        <img src="/icons/x.svg">
                    </button>
                </div>
            </form>
        </div>
    </div>
</body>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
</html>
